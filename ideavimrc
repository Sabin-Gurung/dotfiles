set hlsearch incsearch
set clipboard=unnamed

set scrolloff=7
set showmode
set commentary
set surround
set highlightedyank
set NERDTree

let mapleader = " "
imap jk <Esc>
nnoremap <c-]> :e #<cr>
nnoremap Y y$
nnoremap <leader>wv <c-w>v
nnoremap <leader>ws <c-w>s
nnoremap <leader>wo <c-w>o
nnoremap <c-h> <c-w>h
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-l> <c-w>l

nnoremap <leader><leader> :action SearchEverywhere<cr>
" refactor
nnoremap <leader>rr :action RenameElement<cr>
nnoremap <leader>rn :action Inline<cr>
nnoremap <leader>rR :action RefactoringMenu<cr>
nnoremap <leader>rf :action IntroduceField<cr>
nnoremap <leader>rc :action IntroduceConstant<cr>
nnoremap <leader>rm :action ExtractFunction<cr>
nnoremap <leader>rv :action IntroduceVariable<cr>
nnoremap <leader>ro :action OptimizeImports<cr>
nnoremap <leader>rF :action ReformatCode<cr>
" generate
nnoremap <leader>rg :action Generate<cr>
" goto
nnoremap <leader>gr :action FindUsages<cr>
nnoremap <leader>gt :action GotoTest<cr>
" git
nnoremap <leader>ga :action Annotate<cr>
nnoremap <leader>gs :action ActivateVersionControlToolWindow<cr>
nnoremap <leader>gb :action Git.Branches<cr>
nnoremap <leader>gh :action Vcs.ShowTabbedFileHistory<cr>
nnoremap <leader>gu :action Vcs.UpdateProject<cr>

" test run
nnoremap <leader>tr :action RunClass<cr>
nnoremap <leader>td :action DebugClass<cr>

" windows
nnoremap <leader>wm :action HideAllWindows<cr>
nnoremap <leader>ot :action ActivateTerminalToolWindow<cr>
nnoremap <leader>of :action ActivateProjectToolWindow<cr>

" Unmap the arrow keys
no <down> <Nop>
no <right> <Nop>
no <left> <Nop>
no <up> <Nop>
ino <down> <Nop>
ino <right> <Nop>
ino <left> <Nop>
ino <up> <Nop>
vno <down> <Nop>
vno <right> <Nop>
vno <left> <Nop>
vno <up> <Nop>

nnoremap >) :action :cursive.actions.paredit/slurp-forwards<cr>
nnoremap <) :action :cursive.actions.paredit/barf-forwards<cr>
nnoremap >( :action :cursive.actions.paredit/slurp-backwards<cr>
nnoremap <( :action :cursive.actions.paredit/barf-backwards<cr>

" nnoremap ysaf( va( :action :cursive.actions.paredit/wrap-paren<cr> <Esc>
" nnoremap ysaf) :cursive.actions.paredit/wrap-paren<cr>
" nnoremap ysaf[ :cursive.actions.paredit/wrap-square<cr>
" nnoremap ysaf] :cursive.actions.paredit/wrap-square<cr>
" nnoremap ysaf" :cursive.actions.paredit/wrap-quotes<cr>
" nnoremap ysaf} :cursive.actions.paredit/wrap-cruly<cr>
" nnoremap ysaf{ :cursive.actions.paredit/wrap-cruly<cr>
"":cursive.repl.actions/run-last-sexp

"":cursive.testing.actions/rerun-last-test
"":cursive.testing.actions/run-ns-tests              <M-S- >
"":cursive.testing.actions/run-single-test           <M-S-7>
"":cursive.repl.actions/load-file                    <M-S-L>
